@model ProductVM

@{
    var isEdit = Model?.Product?.Id > 0;
    // always post to the single Upsert action
    var formAction = "Upsert";
    ViewData["Title"] = isEdit ? "Edit" : "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form asp-action="@formAction" asp-controller="Products" asp-area="Admin" method="post" enctype="multipart/form-data">

    <div class="container">
        <div class="row pt-4">
            <div class="row col-10">
                <h5 class="text-muted">@((isEdit) ? "Edit Product" : "Create Product")</h5>
            </div>
            <div class="row col-1">
                <a asp-action="Index" class="btn btn-secondary p-2">Cancel</a>
            </div>
            <div class="row col-1">
                <input type="submit" value="@(isEdit ? "Update" : "Create")"
                       class="btn btn-primary p-2" />
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-12">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Product.Id" />
            <input type="hidden" asp-for="Product.ImageUrl" />
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @if (!string.IsNullOrEmpty(Model?.Product?.ImageUrl))
                        {
                            <div class="mb-2">
                                <img src="@Model.Product.ImageUrl" alt="Product image" style="max-height:100px;" />
                            </div>
                        }
                        <input asp-for="ImageFile" type="file" class="form-control" />
                        <span asp-validation-for="ImageFile" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Product.Name" class="control-label"></label>
                        <input asp-for="Product.Name" class="form-control" />
                        <span asp-validation-for="Product.Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="Product.ISBN" class="control-label"></label>
                        <input asp-for="Product.ISBN" class="form-control" />
                        <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Product.Author" class="control-label"></label>
                        <input asp-for="Product.Author" class="form-control" />
                        <span asp-validation-for="Product.Author" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Product.CategoryId" class="control-label"></label>
                        <select asp-for="Product.CategoryId" class="form-select" asp-items="@Model.CategoryList">
                            <option value="">-- Select Category --</option>
                        </select>
                        <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="Product.ListPrice" class="control-label"></label>
                        <input asp-for="Product.ListPrice" class="form-control" />
                        <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Product.Price50" class="control-label"></label>
                        <input asp-for="Product.Price50" class="form-control" />
                        <span asp-validation-for="Product.Price50" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Product.Price100" class="control-label"></label>
                        <input asp-for="Product.Price100" class="form-control" />
                        <span asp-validation-for="Product.Price100" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label asp-for="Product.Description" class="control-label"></label>
                        <textarea asp-for="Product.Description" class="form-control"></textarea>
                        <span asp-validation-for="Product.Description" class="text-danger"></span>
                    </div>

                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        // ensure TinyMCE edits are saved back to textarea before submit
        document.addEventListener('DOMContentLoaded', function () {
            var form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function () {
                    if (window.tinymce) tinymce.triggerSave();
                });
            }
        });
    </script>

    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Nov 10, 2025:
            'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'advtemplate', 'ai', 'uploadcare', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography uploadcare | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
          uploadcare_public_key: '3e9ec64513b9b28e3641',
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}